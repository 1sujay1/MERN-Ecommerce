{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\shopDemo\\\\clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport Loader from '../../components/loader/loader.component';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionPage from '../collection/collection.component';\nimport './shop.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopPage = _ref => {\n  _s();\n\n  let {\n    fetchCollectionsStarts,\n    isCollectionFetching,\n    isCollectionLoaded\n  } = _ref;\n  useEffect(() => {\n    fetchCollectionsStarts(); //Methadology of using componentWillUnmount\n    // return () => {\n    //     console.log(\"hello\");\n    // }\n  }, [fetchCollectionsStarts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: !isCollectionFetching ? /*#__PURE__*/_jsxDEV(CollectionOverview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 66\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \":collectionId\",\n        element: isCollectionLoaded ? /*#__PURE__*/_jsxDEV(CollectionPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 75\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 96\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ShopPage;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStarts: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","connect","Route","Routes","createStructuredSelector","CollectionOverview","Loader","fetchCollectionsStart","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionPage","ShopPage","fetchCollectionsStarts","isCollectionFetching","isCollectionLoaded","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,iCAArE;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAO,mBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAA0E;AAAA;;AAAA,MAAzE;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA,oBAA1B;AAAgDC,IAAAA;AAAhD,GAAyE;AAEvFd,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,sBAAsB,GADV,CAGZ;AACA;AACA;AACA;AACH,GAPQ,EAON,CAACA,sBAAD,CAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,EAAE,CAACC,oBAAD,gBAAwB,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAAxB,gBAAiD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,eAAZ;AAA4B,QAAA,OAAO,EAAEC,kBAAkB,gBAAG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAwB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApBD;;GAAMH,Q;;KAAAA,Q;AAqBN,MAAMI,eAAe,GAAGX,wBAAwB,CAAC;AAC7CS,EAAAA,oBAAoB,EAAEL,0BADuB;AAE7CM,EAAAA,kBAAkB,EAAEL;AAFyB,CAAD,CAAhD;;AAIA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,sBAAsB,EAAE,MAAMK,QAAQ,CAACV,qBAAqB,EAAtB;AADF,CAAL,CAAnC;;AAKA,eAAeN,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\r\nimport Loader from '../../components/loader/loader.component';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport './shop.style.scss';\r\n\r\nconst ShopPage = ({ fetchCollectionsStarts, isCollectionFetching, isCollectionLoaded }) => {\r\n\r\n    useEffect(() => {\r\n        fetchCollectionsStarts()\r\n\r\n        //Methadology of using componentWillUnmount\r\n        // return () => {\r\n        //     console.log(\"hello\");\r\n        // }\r\n    }, [fetchCollectionsStarts])\r\n\r\n    return (\r\n        <div className=\"shop-page\" >\r\n            <Routes>\r\n                <Route path='/' element={!isCollectionFetching ? <CollectionOverview /> : <Loader />} />\r\n                <Route path=':collectionId' element={isCollectionLoaded ? <CollectionPage /> : <Loader />} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIsCollectionLoaded\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStarts: () => dispatch(fetchCollectionsStart())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}