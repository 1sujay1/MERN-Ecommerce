{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser, createUserWithEmail } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure } from './user.actions';\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth';\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, ...otherProps);\n    yield put(signInSuccess({\n      id: userRef.id,\n      ...userRef.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      auth,\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOutUserFromSession() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUpUser(_ref2) {\n  let {\n    payload: {\n      displayName,\n      email,\n      password\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield createUserWithEmail(auth, email, password);\n    yield getSnapshotFromUserAuth(user, {\n      displayName\n    });\n  } catch (error) {\n    console.log(\"err\", error);\n    console.log(\"err\", error.message);\n    yield put(signUpFailure(error));\n  }\n}\n/**Sagas (Listeners or observers listening for actions)*/\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutUserFromSession);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUser);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOut), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","createUserWithEmail","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signInWithEmailAndPassword","signInWithPopup","getSnapshotFromUserAuth","user","userRef","otherProps","id","data","error","signInWithGoogle","signInWithEmail","payload","email","password","isUserAuthenticated","userAuth","signOutUserFromSession","signOut","signUpUser","displayName","console","log","message","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects'\r\nimport UserActionTypes from './user.types'\r\n\r\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser, createUserWithEmail } from '../../firebase/firebase.utils'\r\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure } from './user.actions'\r\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth'\r\n\r\nexport function* getSnapshotFromUserAuth(user) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, user, ...otherProps);\r\n        yield put(signInSuccess({ id: userRef.id, ...userRef.data() }))\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield signInWithPopup(auth, googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithEmail({ payload: { auth, email, password } }) {\r\n    try {\r\n        const { user } = yield signInWithEmailAndPassword(auth, email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signOutUserFromSession() {\r\n    try {\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n    } catch (error) {\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\nexport function* signUpUser({ payload: { displayName, email, password } }) {\r\n    try {\r\n        const { user } = yield createUserWithEmail(auth, email, password);\r\n        yield getSnapshotFromUserAuth(user, { displayName })\r\n    } catch (error) {\r\n        console.log(\"err\", error);\r\n        console.log(\"err\", error.message);\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\n/**Sagas (Listeners or observers listening for actions)*/\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    )\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(\r\n        UserActionTypes.CHECK_USER_SESSION,\r\n        isUserAuthenticated\r\n    )\r\n}\r\nexport function* onSignOut() {\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_OUT_START,\r\n        signOutUserFromSession\r\n    )\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_UP_START,\r\n        signUpUser\r\n    )\r\n}\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOut),\r\n        call(onSignUpStart),\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}