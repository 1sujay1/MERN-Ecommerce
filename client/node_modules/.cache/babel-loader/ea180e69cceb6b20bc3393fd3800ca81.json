{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess } from './user.actions';\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth';\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    yield put(signInSuccess({\n      id: userRef.id,\n      ...userRef.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      auth,\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","signInFailure","signInSuccess","signInWithEmailAndPassword","signInWithPopup","getSnapshotFromUserAuth","user","userRef","id","data","error","signInWithGoogle","signInWithEmail","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,0BAAT,EAAqCC,eAArC,QAA4D,eAA5D;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,IAAlC,EAAwC;AAC3C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMb,GAAG,CAACS,aAAa,CAAC;AAAEM,MAAAA,EAAE,EAAED,OAAO,CAACC,EAAd;AAAkB,SAAGD,OAAO,CAACE,IAAR;AAArB,KAAD,CAAd,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMF,eAAe,CAACL,IAAD,EAAOD,cAAP,CAAtC;AACA,UAAMO,uBAAuB,CAACC,IAAD,CAA7B;AAEH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AACD,OAAO,UAAUE,eAAV,OAAkE;AAAA,MAAxC;AAAEC,IAAAA,OAAO,EAAE;AAAEd,MAAAA,IAAF;AAAQe,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAAX,GAAwC;;AACrE,MAAI;AACA,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMH,0BAA0B,CAACJ,IAAD,EAAOe,KAAP,EAAcC,QAAd,CAAjD;AACA,UAAMV,uBAAuB,CAACC,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAGD,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAMtB,UAAU,CACZG,eAAe,CAACoB,oBADJ,EAEZN,gBAFY,CAAhB;AAIH;AACD,OAAO,UAAUO,kBAAV,GAA+B;AAClC,QAAMxB,UAAU,CACZG,eAAe,CAACsB,mBADJ,EAEZP,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAMzB,GAAG,CAAC,CACNC,IAAI,CAACoB,mBAAD,CADE,EAENpB,IAAI,CAACsB,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects'\r\nimport UserActionTypes from './user.types'\r\n\r\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils'\r\nimport { signInFailure, signInSuccess } from './user.actions'\r\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth'\r\n\r\nexport function* getSnapshotFromUserAuth(user) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        yield put(signInSuccess({ id: userRef.id, ...userRef.data() }))\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield signInWithPopup(auth, googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithEmail({ payload: { auth, email, password } }) {\r\n    try {\r\n        const { user } = yield signInWithEmailAndPassword(auth, email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    )\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}