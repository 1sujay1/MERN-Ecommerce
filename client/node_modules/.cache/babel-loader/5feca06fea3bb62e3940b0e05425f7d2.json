{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, getDocs, collection, doc, query, where } from \"firebase/firestore\"; // import { getAnalytics } from \"firebase/analytics\";\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// Initialize Cloud Firestore through Firebase\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD_LPGvdkgJ0_Rwdn_wdL2UgnAXxmAfHwo\",\n  authDomain: \"ecommerce-cloth-5dd7b.firebaseapp.com\",\n  projectId: \"ecommerce-cloth-5dd7b\",\n  storageBucket: \"ecommerce-cloth-5dd7b.appspot.com\",\n  messagingSenderId: \"986073070819\",\n  appId: \"1:986073070819:web:4c07a0e3a22c3e722219d6\",\n  measurementId: \"G-J0P841FG0G\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig); // const analytics = getAnalytics(app);\n\nexport const auth = getAuth();\nexport const firestore = getFirestore();\nexport const signInWithGoogle = () => signInWithPopup(auth, provider); // export default firebase;\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  console.log(\"userAuth\", userAuth);\n  if (!userAuth) return;\n  const citiesRef = collection(firestore, \"users\");\n  const q = query(citiesRef, where(\"name\", \"==\", 'ravindra'));\n  console.log(\"q\", q);\n  let docSnap = await getDocs(doc(firestore, \"users\", \"dfafda\"));\n\n  if (docSnap.exists()) {\n    console.log(\"Document data:\", docSnap.data());\n  } else {\n    // doc.data() will be undefined in this case\n    console.log(\"No such document!\");\n  }\n};","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/firebase/firebase.utils.js"],"names":["initializeApp","getFirestore","getDocs","collection","doc","query","where","getAuth","signInWithPopup","GoogleAuthProvider","provider","setCustomParameters","prompt","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","firestore","signInWithGoogle","createUserProfileDocument","userAuth","additionalData","console","log","citiesRef","q","docSnap","exists","data"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4CC,GAA5C,EAAiDC,KAAjD,EAAwDC,KAAxD,QAAqE,oBAArE,C,CACA;;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AAEA,MAAMC,QAAQ,GAAG,IAAID,kBAAJ,EAAjB;AACAC,QAAQ,CAACC,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CACA;AACA;AAEA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,uCAFO;AAGnBC,EAAAA,SAAS,EAAE,uBAHQ;AAInBC,EAAAA,aAAa,EAAE,mCAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB,C,CAUA;;AACA,MAAMC,GAAG,GAAGrB,aAAa,CAACa,cAAD,CAAzB,C,CACA;;AAEA,OAAO,MAAMS,IAAI,GAAGf,OAAO,EAApB;AACP,OAAO,MAAMgB,SAAS,GAAGtB,YAAY,EAA9B;AACP,OAAO,MAAMuB,gBAAgB,GAAG,MAAMhB,eAAe,CAACc,IAAD,EAAOZ,QAAP,CAA9C,C,CACP;;AAEA,OAAO,MAAMe,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzEC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACA,MAAI,CAACA,QAAL,EAAe;AAEf,QAAMI,SAAS,GAAG3B,UAAU,CAACoB,SAAD,EAAY,OAAZ,CAA5B;AAEA,QAAMQ,CAAC,GAAG1B,KAAK,CAACyB,SAAD,EAAYxB,KAAK,CAAC,MAAD,EAAS,IAAT,EAAe,UAAf,CAAjB,CAAf;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBE,CAAjB;AACA,MAAIC,OAAO,GAAG,MAAM9B,OAAO,CAACE,GAAG,CAACmB,SAAD,EAAY,OAAZ,EAAqB,QAArB,CAAJ,CAA3B;;AACA,MAAIS,OAAO,CAACC,MAAR,EAAJ,EAAsB;AAClBL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,OAAO,CAACE,IAAR,EAA9B;AACH,GAFD,MAEO;AACH;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,CAfM","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, getDocs, collection, doc, query, where } from \"firebase/firestore\";\r\n// import { getAnalytics } from \"firebase/analytics\";\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst provider = new GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// Initialize Cloud Firestore through Firebase\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD_LPGvdkgJ0_Rwdn_wdL2UgnAXxmAfHwo\",\r\n    authDomain: \"ecommerce-cloth-5dd7b.firebaseapp.com\",\r\n    projectId: \"ecommerce-cloth-5dd7b\",\r\n    storageBucket: \"ecommerce-cloth-5dd7b.appspot.com\",\r\n    messagingSenderId: \"986073070819\",\r\n    appId: \"1:986073070819:web:4c07a0e3a22c3e722219d6\",\r\n    measurementId: \"G-J0P841FG0G\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n\r\nexport const auth = getAuth();\r\nexport const firestore = getFirestore();\r\nexport const signInWithGoogle = () => signInWithPopup(auth, provider);\r\n// export default firebase;\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    console.log(\"userAuth\", userAuth);\r\n    if (!userAuth) return;\r\n\r\n    const citiesRef = collection(firestore, \"users\");\r\n\r\n    const q = query(citiesRef, where(\"name\", \"==\", 'ravindra'));\r\n    console.log(\"q\", q);\r\n    let docSnap = await getDocs(doc(firestore, \"users\", \"dfafda\"))\r\n    if (docSnap.exists()) {\r\n        console.log(\"Document data:\", docSnap.data());\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}