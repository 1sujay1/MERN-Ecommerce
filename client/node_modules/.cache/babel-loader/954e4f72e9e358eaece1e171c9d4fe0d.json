{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser, createUserWithEmail } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure } from './user.actions';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth';\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    for (var _len = arguments.length, otherProps = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      otherProps[_key - 1] = arguments[_key];\n    }\n\n    const userRef = yield call(createUserProfileDocument, user, {\n      otherProps\n    });\n    console.log(\"userRef\", userRef);\n    yield put(signInSuccess({\n      id: userRef.id,\n      ...userRef.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      auth,\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOutUserFromSession() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUpUser(_ref2) {\n  let {\n    payload: {\n      displayName,\n      email,\n      password\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield createUserWithEmailAndPassword(auth, email, password);\n    yield getSnapshotFromUserAuth(user, {\n      displayName\n    });\n  } catch (error) {\n    console.log(\"err\", error);\n    yield put(signUpFailure(error));\n  }\n}\n/**Sagas (Listeners or observers listening for actions)*/\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutUserFromSession);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpUser);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOut), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","createUserWithEmail","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","getSnapshotFromUserAuth","user","otherProps","userRef","console","log","id","data","error","signInWithGoogle","signInWithEmail","payload","email","password","isUserAuthenticated","userAuth","signOutUserFromSession","signOut","signUpUser","displayName","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects'\r\nimport UserActionTypes from './user.types'\r\n\r\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser, createUserWithEmail } from '../../firebase/firebase.utils'\r\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure } from './user.actions'\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth'\r\n\r\nexport function* getSnapshotFromUserAuth(user, ...otherProps) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, user, { otherProps });\r\n        console.log(\"userRef\", userRef);\r\n        yield put(signInSuccess({ id: userRef.id, ...userRef.data() }))\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield signInWithPopup(auth, googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithEmail({ payload: { auth, email, password } }) {\r\n    try {\r\n        const { user } = yield signInWithEmailAndPassword(auth, email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signOutUserFromSession() {\r\n    try {\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n    } catch (error) {\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\nexport function* signUpUser({ payload: { displayName, email, password } }) {\r\n    try {\r\n        const { user } = yield createUserWithEmailAndPassword(auth, email, password);\r\n\r\n        yield getSnapshotFromUserAuth(user, { displayName })\r\n    } catch (error) {\r\n        console.log(\"err\", error);\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\n/**Sagas (Listeners or observers listening for actions)*/\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    )\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(\r\n        UserActionTypes.CHECK_USER_SESSION,\r\n        isUserAuthenticated\r\n    )\r\n}\r\nexport function* onSignOut() {\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_OUT_START,\r\n        signOutUserFromSession\r\n    )\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.SIGN_UP_START,\r\n        signUpUser\r\n    )\r\n}\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOut),\r\n        call(onSignUpStart),\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}