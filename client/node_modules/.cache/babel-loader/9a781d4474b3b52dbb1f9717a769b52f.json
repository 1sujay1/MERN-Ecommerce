{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\shopDemo\\\\clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport { collection, doc, getDocs, onSnapshot } from 'firebase/firestore';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport { convertCollectionsSnapshotToMap, firestore, getCollectionsRef } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionPage from '../collection/collection.component';\nimport './shop.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  async componentDidMount() {\n    let collectionRef = await getCollectionsRef('collections');\n    let collectionData = await convertCollectionsSnapshotToMap(collectionRef);\n    this.props.updateCollections(collectionData);\n\n    if (this.props.collections) {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: !this.state.loading ? /*#__PURE__*/_jsxDEV(CollectionOverview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 68\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 93\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":collectionId\",\n          element: !this.state.loading ? /*#__PURE__*/_jsxDEV(CollectionPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 80\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 101\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nconst mapStateToProps = _ref => {\n  let {\n    shop\n  } = _ref;\n  return {\n    collections: shop.collections\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/pages/shop/shop.component.jsx"],"names":["collection","doc","getDocs","onSnapshot","React","connect","Route","Routes","CollectionOverview","convertCollectionsSnapshotToMap","firestore","getCollectionsRef","updateCollections","CollectionPage","ShopPage","Component","state","loading","unSubscribeFromSnapshot","componentDidMount","collectionRef","collectionData","props","collections","setState","render","mapDispatchToProps","dispatch","collectionMap","mapStateToProps","shop"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,UAAnC,QAAqD,oBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,EAAqDC,iBAArD,QAA8E,+BAA9E;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAO,mBAAP;;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAMZ,QAAjBC,iBAAiB,GAAG;AACtB,QAAIC,aAAa,GAAG,MAAMT,iBAAiB,CAAC,aAAD,CAA3C;AACA,QAAIU,cAAc,GAAG,MAAMZ,+BAA+B,CAACW,aAAD,CAA1D;AACA,SAAKE,KAAL,CAAWV,iBAAX,CAA6BS,cAA7B;;AACA,QAAI,KAAKC,KAAL,CAAWC,WAAf,EAA4B;AACxB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH;AAEJ;;AACDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,EAAE,CAAC,KAAKT,KAAL,CAAWC,OAAZ,gBAAsB,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAAtB,gBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC,OAAZ,gBAAsB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAtB,gBAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxBkC;;AA2BvC,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,iBAAiB,EAAGgB,aAAD,IAAmBD,QAAQ,CAACf,iBAAiB,CAACgB,aAAD,CAAlB;AADV,CAAL,CAAnC;;AAGA,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAe;AACnCP,IAAAA,WAAW,EAAEO,IAAI,CAACP;AADiB,GAAf;AAAA,CAAxB;;AAIA,eAAelB,OAAO,CAACwB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import { collection, doc, getDocs, onSnapshot } from 'firebase/firestore';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\r\nimport { convertCollectionsSnapshotToMap, firestore, getCollectionsRef } from '../../firebase/firebase.utils';\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport './shop.style.scss';\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    }\r\n    unSubscribeFromSnapshot = null;\r\n\r\n    async componentDidMount() {\r\n        let collectionRef = await getCollectionsRef('collections');\r\n        let collectionData = await convertCollectionsSnapshotToMap(collectionRef);\r\n        this.props.updateCollections(collectionData)\r\n        if (this.props.collections) {\r\n            this.setState({ loading: false })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"shop-page\" >\r\n                <Routes>\r\n                    <Route path='/' element={!this.state.loading ? <CollectionOverview /> : <h1>Loading</h1>} />\r\n                    <Route path=':collectionId' element={!this.state.loading ? <CollectionPage /> : <h1>Loading</h1>} />\r\n                </Routes>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: (collectionMap) => dispatch(updateCollections(collectionMap))\r\n})\r\nconst mapStateToProps = ({ shop }) => ({\r\n    collections: shop.collections\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}