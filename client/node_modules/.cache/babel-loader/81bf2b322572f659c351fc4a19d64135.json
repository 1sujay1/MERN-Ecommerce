{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\MERN-Ecommerce\\\\client\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, Suspense, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect'; // import CollectionOverview from '../../components/collections-overview/collections-overview.component';\n\nimport Loader from '../../components/loader/loader.component';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors'; // import CollectionPage from '../collection/collection.component';\n\nimport './shop.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverview = /*#__PURE__*/lazy(_c = () => import('../../components/collections-overview/collections-overview.component'));\n_c2 = CollectionOverview;\nconst CollectionPage = /*#__PURE__*/lazy(_c3 = () => import('../collection/collection.component'));\n_c4 = CollectionPage;\n\nconst ShopPage = _ref => {\n  _s();\n\n  let {\n    fetchCollectionsStarts,\n    isCollectionFetching,\n    isCollectionLoaded\n  } = _ref;\n  useEffect(() => {\n    fetchCollectionsStarts(); //Methadology of using componentWillUnmount\n    // return () => {\n    //     console.log(\"hello\");\n    // }\n  }, [fetchCollectionsStarts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: !isCollectionFetching ? /*#__PURE__*/_jsxDEV(CollectionOverview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 70\n          }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 95\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":collectionId\",\n          element: isCollectionLoaded ? /*#__PURE__*/_jsxDEV(CollectionPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 79\n          }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 100\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c5 = ShopPage;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStarts: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CollectionOverview$lazy\");\n$RefreshReg$(_c2, \"CollectionOverview\");\n$RefreshReg$(_c3, \"CollectionPage$lazy\");\n$RefreshReg$(_c4, \"CollectionPage\");\n$RefreshReg$(_c5, \"ShopPage\");","map":{"version":3,"sources":["D:/React/MERN-Ecommerce/client/src/pages/shop/shop.component.jsx"],"names":["React","lazy","Suspense","useEffect","connect","Route","Routes","createStructuredSelector","Loader","fetchCollectionsStart","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionOverview","CollectionPage","ShopPage","fetchCollectionsStarts","isCollectionFetching","isCollectionLoaded","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,wBAAT,QAAyC,UAAzC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,iCAArE,C,CACA;;AACA,OAAO,mBAAP;;AAEA,MAAMC,kBAAkB,gBAAGX,IAAI,MAAC,MAAM,OAAO,sEAAP,CAAP,CAA/B;MAAMW,kB;AACN,MAAMC,cAAc,gBAAGZ,IAAI,OAAC,MAAM,OAAO,oCAAP,CAAP,CAA3B;MAAMY,c;;AAEN,MAAMC,QAAQ,GAAG,QAA0E;AAAA;;AAAA,MAAzE;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA,oBAA1B;AAAgDC,IAAAA;AAAhD,GAAyE;AAEvFd,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,sBAAsB,GADV,CAGZ;AACA;AACA;AACA;AACH,GAPQ,EAON,CAACA,sBAAD,CAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,EAAE,CAACC,oBAAD,gBAAwB,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAAxB,gBAAiD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,OAAO,EAAEC,kBAAkB,gBAAG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAwB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAtBD;;GAAMH,Q;;MAAAA,Q;AAuBN,MAAMI,eAAe,GAAGX,wBAAwB,CAAC;AAC7CS,EAAAA,oBAAoB,EAAEN,0BADuB;AAE7CO,EAAAA,kBAAkB,EAAEN;AAFyB,CAAD,CAAhD;;AAIA,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,sBAAsB,EAAE,MAAMK,QAAQ,CAACX,qBAAqB,EAAtB;AADF,CAAL,CAAnC;;AAKA,eAAeL,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,QAA7C,CAAf","sourcesContent":["import React, { lazy, Suspense, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\n// import CollectionOverview from '../../components/collections-overview/collections-overview.component';\r\nimport Loader from '../../components/loader/loader.component';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\r\n// import CollectionPage from '../collection/collection.component';\r\nimport './shop.style.scss';\r\n\r\nconst CollectionOverview = lazy(() => import('../../components/collections-overview/collections-overview.component'))\r\nconst CollectionPage = lazy(() => import('../collection/collection.component'))\r\n\r\nconst ShopPage = ({ fetchCollectionsStarts, isCollectionFetching, isCollectionLoaded }) => {\r\n\r\n    useEffect(() => {\r\n        fetchCollectionsStarts()\r\n\r\n        //Methadology of using componentWillUnmount\r\n        // return () => {\r\n        //     console.log(\"hello\");\r\n        // }\r\n    }, [fetchCollectionsStarts])\r\n\r\n    return (\r\n        <div className=\"shop-page\" >\r\n            <Suspense fallback={<Loader />}>\r\n                <Routes>\r\n                    <Route path='/' element={!isCollectionFetching ? <CollectionOverview /> : <Loader />} />\r\n                    <Route path=':collectionId' element={isCollectionLoaded ? <CollectionPage /> : <Loader />} />\r\n                </Routes>\r\n            </Suspense>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIsCollectionLoaded\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStarts: () => dispatch(fetchCollectionsStart())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}