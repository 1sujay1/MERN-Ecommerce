{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\shopDemo\\\\clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport './sign-up.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    signUpStart\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password donot match\");\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"displayName\",\n        type: \"text\",\n        value: displayName,\n        handleChange: handleChange,\n        required: true,\n        label: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: handleChange,\n        required: true,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        required: true,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"confirmPassword\",\n        type: \"confirmPassword\",\n        value: confirmPassword,\n        handleChange: handleChange,\n        required: true,\n        label: \"Confirm password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"UG5wfEWNP+JoNv5iCnBOnHA/Liw=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signUpStart","CustomButton","FormInput","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleChange","e","value","name","target","handleSubmit","event","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport './sign-up.style.scss';\r\n\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n    const [userCredentials, setUserCredentials] = useState(\r\n        {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n    )\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n    const handleChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setUserCredentials({ ...userCredentials, [name]: value });\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert(\"Password donot match\");\r\n            return;\r\n        }\r\n        signUpStart(displayName, email, password)\r\n    }\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <h1 className=\"title\">I do not have an account</h1>\r\n            <span>Sign up with email and password</span>\r\n            <form className=\"sign-up-form\" onSubmit={handleSubmit} >\r\n                <FormInput\r\n                    name='displayName'\r\n                    type='text'\r\n                    value={displayName}\r\n                    handleChange={handleChange}\r\n                    required\r\n                    label='Name'\r\n                />\r\n                <FormInput\r\n                    name='email'\r\n                    type='email'\r\n                    value={email}\r\n                    handleChange={handleChange}\r\n                    required\r\n                    label='Email'\r\n                />\r\n                <FormInput\r\n                    name='password'\r\n                    type='password'\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    required\r\n                    label='Password'\r\n                />\r\n                <FormInput\r\n                    name='confirmPassword'\r\n                    type='confirmPassword'\r\n                    value={confirmPassword}\r\n                    handleChange={handleChange}\r\n                    required\r\n                    label='Confirm password'\r\n                />\r\n                <CustomButton type='submit'>Submit</CustomButton>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({ displayName, email, password }))\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}