{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\shopDemo\\\\clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport './sign-in.style.scss';\nimport { auth } from '../../firebase/firebase.utils';\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = _ref => {\n  _s();\n\n  let {\n    emailSignInStart,\n    googleSignInStarts\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUserCredentials({\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // const { emailSignInStart } = this.props;\n\n    emailSignInStart(auth, email, password);\n  }; // const { googleSignInStarts } = this.props;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I Already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: this.state.email,\n        handleChange: this.handleChange,\n        required: true,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        handleChange: this.handleChange,\n        required: true,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          isGoogleSignIn: true,\n          onClick: googleSignInStarts,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"dyONe9Od79KIDxRmxW+NjhQATKM=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStarts: () => dispatch(googleSignInStart()),\n  emailSignInStart: (auth, email, password) => dispatch(emailSignInStart({\n    auth,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","CustomButton","FormInput","auth","emailSignInStart","googleSignInStart","connect","SignIn","googleSignInStarts","userCredentials","setUserCredentials","email","password","handleChange","e","value","name","target","handleSubmit","event","preventDefault","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport './sign-in.style.scss';\r\nimport { auth } from '../../firebase/firebase.utils';\r\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStarts }) => {\r\n\r\n    const [userCredentials, setUserCredentials] = useState({ email: '', password: '' });\r\n\r\n    const handleChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setUserCredentials({ [name]: value })\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // const { emailSignInStart } = this.props;\r\n        emailSignInStart(auth, email, password);\r\n    }\r\n\r\n    // const { googleSignInStarts } = this.props;\r\n    return (\r\n        <div className=\"sign-in\" >\r\n            <h2 className=\"title\">I Already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n            <form onSubmit={this.handleSubmit} >\r\n\r\n                <FormInput\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={this.state.email}\r\n                    handleChange={this.handleChange}\r\n                    required\r\n                    label='Email'\r\n                />\r\n                <FormInput\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    handleChange={this.handleChange}\r\n                    required\r\n                    label='Password'\r\n                />\r\n\r\n                <div className=\"buttons\">\r\n                    <CustomButton type=\"submit\">\r\n                        Sign in\r\n                    </CustomButton>\r\n                    <CustomButton type=\"button\" isGoogleSignIn onClick={googleSignInStarts}>\r\n                        Sign in with Google\r\n                    </CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStarts: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (auth, email, password) => dispatch(emailSignInStart({ auth, email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}