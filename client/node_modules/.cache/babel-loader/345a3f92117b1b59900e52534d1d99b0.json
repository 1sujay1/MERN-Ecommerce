{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { emailSignInFailure, emailSignInSuccess, googleSignInFailure, googleSignInSuccess } from './user.actions';\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    yield put(googleSignInSuccess({\n      id: userRef.id,\n      ...userRef.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      auth,\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const emailRef = yield call(signInWithEmailAndPassword, auth, email, password);\n    console.log(\"emailRef\", emailRef);\n    yield put(emailSignInSuccess(emailRef));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","emailSignInFailure","emailSignInSuccess","googleSignInFailure","googleSignInSuccess","signInWithEmailAndPassword","signInWithPopup","signInWithGoogle","user","userRef","id","data","error","signInWithEmail","payload","email","password","emailRef","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,mBAAjD,EAAsEC,mBAAtE,QAAiG,gBAAjG;AACA,SAASC,0BAAT,EAAqCC,eAArC,QAA4D,eAA5D;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMF,eAAe,CAACP,IAAD,EAAOD,cAAP,CAAtC;AACA,UAAMW,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BQ,IAA5B,CAA1B;AACA,UAAMf,GAAG,CAACW,mBAAmB,CAAC;AAAEM,MAAAA,EAAE,EAAED,OAAO,CAACC,EAAd;AAAkB,SAAGD,OAAO,CAACE,IAAR;AAArB,KAAD,CAApB,CAAT;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACU,mBAAmB,CAACS,KAAD,CAApB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,eAAV,OAAkE;AAAA,MAAxC;AAAEC,IAAAA,OAAO,EAAE;AAAEf,MAAAA,IAAF;AAAQgB,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAAX,GAAwC;;AACrE,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMrB,IAAI,CAACS,0BAAD,EAA6BN,IAA7B,EAAmCgB,KAAnC,EAA0CC,QAA1C,CAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,UAAMxB,GAAG,CAACS,kBAAkB,CAACe,QAAD,CAAnB,CAAT;AACH,GAJD,CAIE,OAAOL,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACQ,kBAAkB,CAACW,KAAD,CAAnB,CAAT;AACH;AACJ;AAGD,OAAO,UAAUQ,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CACZG,eAAe,CAACwB,oBADJ,EAEZd,gBAFY,CAAhB;AAIH;AACD,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CACZG,eAAe,CAAC0B,mBADJ,EAEZV,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUW,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACwB,mBAAD,CADE,EAENxB,IAAI,CAAC0B,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects'\r\nimport UserActionTypes from './user.types'\r\n\r\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils'\r\nimport { emailSignInFailure, emailSignInSuccess, googleSignInFailure, googleSignInSuccess } from './user.actions'\r\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth'\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield signInWithPopup(auth, googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        yield put(googleSignInSuccess({ id: userRef.id, ...userRef.data() }))\r\n    } catch (error) {\r\n        yield put(googleSignInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithEmail({ payload: { auth, email, password } }) {\r\n    try {\r\n        const emailRef = yield call(signInWithEmailAndPassword, auth, email, password);\r\n        console.log(\"emailRef\", emailRef);\r\n        yield put(emailSignInSuccess(emailRef));\r\n    } catch (error) {\r\n        yield put(emailSignInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    )\r\n}\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}