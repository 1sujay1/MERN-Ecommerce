{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\shopDemo\\\\clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport { collection, doc, getDocs, onSnapshot } from 'firebase/firestore';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport { convertCollectionsSnapshotToMap, firestore, getCollectionsRef } from '../../firebase/firebase.utils';\nimport { fetchCollectionsStart, fetchCollectionsStartAsync, updateCollections } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport CollectionPage from '../collection/collection.component';\nimport './shop.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStarts\n    } = this.props;\n    console.log(\"fetchCollectionsStarts\", fetchCollectionsStarts);\n    fetchCollectionsStarts();\n  }\n\n  render() {\n    const {\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: !isCollectionFetching ? /*#__PURE__*/_jsxDEV(CollectionOverview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 70\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 95\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":collectionId\",\n          element: isCollectionLoaded ? /*#__PURE__*/_jsxDEV(CollectionPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 79\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 100\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStarts: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/React/shopDemo/clothing/src/pages/shop/shop.component.jsx"],"names":["collection","doc","getDocs","onSnapshot","React","connect","Route","Routes","createStructuredSelector","CollectionOverview","convertCollectionsSnapshotToMap","firestore","getCollectionsRef","fetchCollectionsStart","fetchCollectionsStartAsync","updateCollections","selectIsCollectionFetching","selectIsCollectionLoaded","CollectionPage","ShopPage","Component","componentDidMount","fetchCollectionsStarts","props","console","log","render","isCollectionFetching","isCollectionLoaded","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,UAAnC,QAAqD,oBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,EAAqDC,iBAArD,QAA8E,+BAA9E;AACA,SAASC,qBAAT,EAAgCC,0BAAhC,EAA4DC,iBAA5D,QAAqF,+BAArF;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,iCAArE;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAO,mBAAP;;;AAEA,MAAMC,QAAN,SAAuBf,KAAK,CAACgB,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAA6B,KAAKC,KAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,sBAAtC;AACAA,IAAAA,sBAAsB;AACzB;;AACDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,QAA+C,KAAKL,KAA1D;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,EAAE,CAACI,oBAAD,gBAAwB,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAAxB,gBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,OAAO,EAAEC,kBAAkB,gBAAG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAjBkC;;AAmBvC,MAAMC,eAAe,GAAGrB,wBAAwB,CAAC;AAC7CmB,EAAAA,oBAAoB,EAAEX,0BADuB;AAE7CY,EAAAA,kBAAkB,EAAEX;AAFyB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,sBAAsB,EAAE,MAAMS,QAAQ,CAAClB,qBAAqB,EAAtB;AADF,CAAL,CAAnC;;AAKA,eAAeR,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import { collection, doc, getDocs, onSnapshot } from 'firebase/firestore';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\r\nimport { convertCollectionsSnapshotToMap, firestore, getCollectionsRef } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsStart, fetchCollectionsStartAsync, updateCollections } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport './shop.style.scss';\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { fetchCollectionsStarts } = this.props;\r\n        console.log(\"fetchCollectionsStarts\", fetchCollectionsStarts);\r\n        fetchCollectionsStarts()\r\n    }\r\n    render() {\r\n        const { isCollectionFetching, isCollectionLoaded } = this.props;\r\n        return (\r\n            <div className=\"shop-page\" >\r\n                <Routes>\r\n                    <Route path='/' element={!isCollectionFetching ? <CollectionOverview /> : <h1>Loading</h1>} />\r\n                    <Route path=':collectionId' element={isCollectionLoaded ? <CollectionPage /> : <h1>Loading</h1>} />\r\n                </Routes>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIsCollectionLoaded\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStarts: () => dispatch(fetchCollectionsStart())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}